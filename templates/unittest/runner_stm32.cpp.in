/*
 * Copyright (c) 2011-2012, Fabian Greif
 * Copyright (c) 2011, Georgi Grinshpun
 * Copyright (c) 2013, 2016, Niklas Hauser
 * Copyright (c) 2016, Sascha Schade
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

// WARNING: This file is generated automatically, do not edit!
// Please modify the corresponding 'runner_stm32.cpp.in' file instead.
// ----------------------------------------------------------------------------

#include <modm/architecture/platform.hpp>

#include <unittest/reporter.hpp>
#include <unittest/controller.hpp>

${includes}

${names}

using namespace modm::platform;

// Create an IODeviceWrapper around the Uart Peripheral we want to use
modm::IODeviceWrapper< Usart2, modm::IOBuffer::BlockIfFull > loggerDevice;

int
main()
{
	Board::initialize();

	// initialize output device, enable USART 2
	GpioOutputA2::connect(Usart2::Tx);
	GpioInputA3::connect(Usart2::Rx, Gpio::InputType::PullUp);
	Usart2::initialize<Board::systemClock, 115200>(12);

	loggerDevice.write("Unittests (" __DATE__ ", " __TIME__")\n");

	unittest::Reporter reporter(loggerDevice);
	unittest::Controller::instance().setReporter(reporter);

	// run tests
${tests}

	unittest::Controller::instance().getReporter().printSummary();

	while (true)
	{
	}
}
