/*
 * Copyright (c) 2015-2016, Niklas Hauser
 *
 * This file is part of the modm project.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 */
// ----------------------------------------------------------------------------

#ifndef MODM_CORTEX_CORE_HPP
#define MODM_CORTEX_CORE_HPP

#include <stdint.h>

namespace modm
{

namespace cortex
{

typedef void (*InterruptHandler)(void);

/// @ingroup	{{partname}}_core
class Core
{
public:
	/**
	 * Get unique device id (96-bits)
	 *
	 * @param offset	0..2
	 * @return	32-bit of the unique id
	 */
	uint32_t
	getUniqueId(uint8_t offset)
	{
		if (offset > 2) return 0;
%% if target["family"] in ["f2", "f3", "f4"]
		uint32_t *baseaddress = (uint32_t*) 0x1FFF7A10;
%% elif target["family"] == "f7"
		uint32_t *baseaddress = (uint32_t*) 0x1FF0F420;
%% elif target["family"] == "f1"
		uint32_t *baseaddress = (uint32_t*) 0x1FFFF7E8;
%% else
# error "Core only supported on STM32F1, F2, F3, F4 and F7. Please port to your target."
%% endif
		return *(baseaddress + offset);
	}
};

}

}

#endif	// MODM_CORTEX_CORE_HPP
