#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# Copyright (c) 2017, Fabian Greif
#
# This file is part of the modm project.
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

#!/usr/bin/env python

import os

rootpath = ".."

env = Environment(
        toolpath=[os.path.join(rootpath, "scons", "site_tools"),
                  os.path.join(rootpath, "ext", "dlr", "scons-build-tools", "site_tools")],
        tools=[
            'compiler_hosted_gcc',
            'settings_buildpath',
            'utils_buildformat',
            'utils_buildsize',
            'bitmap',
            'system_design',
            'unittest'
            ],
        CXXFLAGS_language=[
            '-std=c++14',
            ],
        ENV=os.environ)
env["CONFIG_MODM_ROOTPATH"] = os.path.abspath(rootpath)

env.RemoveFromList('CCFLAGS_warning', [
    '-Wshadow',
    '-Wcast-align',
    '-Wmissing-declarations',
    '-Wcast-qual',
    '-Wredundant-decls', ])
env.RemoveFromList('CXXFLAGS_warning', [
    '-Wold-style-cast',
    '-Wnon-virtual-dtor'])

# User Config Options
env['BASEPATH'] = os.path.abspath(rootpath)
env['BUILDPATH'] = os.path.abspath(os.path.join(rootpath, 'build'))

library = env.SConscript(os.path.join(rootpath, "SConscript"), exports="env")

headers = env.Glob("*.hpp")
headers += env.Glob("*/*.hpp")
headers += env.Glob("*/*/*.hpp")
headers += env.Glob("*/*/*/*.hpp")

files = env.UnittestRunner(target="main.cpp", source=headers, template="runner.cpp.in")
program = env.Program(target='unittest', source=files)

env.Alias('symbols', env.Symbols(program))

env.Alias('build', [program])
env.Alias('all', ['build'])

env.Default('build')
